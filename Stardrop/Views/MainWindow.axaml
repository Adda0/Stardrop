<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Stardrop.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=netstandard"
        xmlns:i="clr-namespace:Projektanker.Icons.Avalonia;assembly=Projektanker.Icons.Avalonia"
        xmlns:conv="clr-namespace:Stardrop.Converters;assembly=Stardrop"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Stardrop.Views.MainWindow"
        Title="Stardrop"
        MinWidth="400"
        MinHeight="400"
        Width="1430"
        Height="800"
        Background="{DynamicResource ThemeBackgroundBrush}"
        HasSystemDecorations="true"
        ExtendClientAreaToDecorationsHint="true"
        ExtendClientAreaChromeHints="NoChrome"
        ExtendClientAreaTitleBarHeightHint="-1"
        CanResize="True"
        Opened="MainWindow_Opened"
        Closing="MainWindow_Closing"
        WindowStartupLocation="CenterScreen"
        Icon="/Assets/icon.ico">

  <Window.Resources>
    <conv:EnumConverter x:Key="EnumToStringConverter"/>
  </Window.Resources>

  <Window.Styles>
    <Style Selector="MenuItem.Bar Separator">
      <Setter Property="Border.Background" Value="{DynamicResource HighlightForegroundBrush}"/>
    </Style>
    <Style Selector="MenuItem.Bar">
      <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
    </Style>
    <Style Selector="MenuItem.Bar:selected /template/ ContentPresenter#PART_HeaderPresenter">
      <Setter Property="TextBlock.Foreground" Value="{DynamicResource HighlightForegroundBrush}"/>
    </Style>
    <Style Selector="MenuItem.Bar:selected /template/ Border#PART_LayoutRoot">
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeBackgroundBrush}" />
    </Style>
    <Style Selector="Menu > MenuItem">
      <Setter Property="Template">
        <ControlTemplate>
          <Border Name="PART_LayoutRoot"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{TemplateBinding CornerRadius}">
            <Panel>
              <ContentPresenter Name="PART_HeaderPresenter"
                                Content="{TemplateBinding Header}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Stretch"
                                Margin="{TemplateBinding Padding}">
                <ContentPresenter.DataTemplates>
                  <DataTemplate DataType="sys:String">
                    <AccessText Text="{Binding}" />
                  </DataTemplate>
                </ContentPresenter.DataTemplates>
              </ContentPresenter>
              <Popup Name="PART_Popup"
                     WindowManagerAddShadowHint="False"
                     MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                     IsLightDismissEnabled="True"
                     IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}"
                     OverlayInputPassThroughElement="{Binding $parent[Menu]}">
                <Border Background="{DynamicResource ThemeBackgroundBrush}"
                        BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
                        BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThemeThickness}"
                        Padding="{DynamicResource MenuFlyoutPresenterThemePadding}"
                        MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
                        MinHeight="{DynamicResource MenuFlyoutThemeMinHeight}"
                        HorizontalAlignment="Stretch"
                        CornerRadius="{DynamicResource OverlayCornerRadius}">
                  <ScrollViewer Classes="menuscroller">
                    <ItemsPresenter Name="PART_ItemsPresenter"
                                    Items="{TemplateBinding Items}"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    ItemTemplate="{TemplateBinding ItemTemplate}"
                                    Margin="{DynamicResource MenuFlyoutScrollerMargin}"
                                    Grid.IsSharedSizeScope="True" />
                  </ScrollViewer>
                </Border>
              </Popup>
            </Panel>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>
    <Style Selector="Button:pointerover /template/ ContentPresenter">
      <Setter Property="Background" Value="LightGray"/>
    </Style>
    <Style Selector="Button:pressed /template/ ContentPresenter">
      <Setter Property="Background" Value="White"/>
    </Style>
    <Style Selector="Button[IsEnabled=false] /template/ ContentPresenter">
      <Setter Property="Opacity" Value="0.5"/>
      <Setter Property="Background" Value="Transparent"/>
    </Style>
    <Style Selector="Button.hyperlink">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}" />
      <Setter Property="HorizontalAlignment" Value="Center" />
      <Setter Property="Cursor" Value="Hand" />
    </Style>
    <Style Selector="Button.status">
      <Setter Property="Foreground" Value="{DynamicResource UpdateAvailableBrush}" />
    </Style>
    <Style Selector="Button.status[Tag=Broken]">
      <Setter Property="Foreground" Value="{DynamicResource UpdateBrokenBrush}" />
    </Style>
    <Style Selector="Button.status[Tag=Unofficial]">
      <Setter Property="Foreground" Value="{DynamicResource UpdateUnofficialBrush}" />
    </Style>
    <Style Selector="Button.hyperlink:pointerover /template/ ContentPresenter">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="TextBlock.Foreground" Value="White" />
    </Style>
    <Style Selector="Button.hyperlink:pressed /template/ ContentPresenter">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="TextBlock.Foreground" Value="{DynamicResource HighlightForegroundBrush}" />
    </Style>
    <Style Selector="Button#exitButton:pointerover /template/ ContentPresenter">
      <Setter Property="Background" Value="Red"/>
    </Style>
    <Style Selector="Button#exitButton:pressed /template/ ContentPresenter">
      <Setter Property="Background" Value="Pink"/>
    </Style>
    <Style Selector="ComboBoxItem">
      <Setter Property="FontWeight" Value="Bold"/>
      <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
      <Setter Property="Background" Value="{DynamicResource ComboBoxItemBackgroundBrush}"/>
    </Style>
    <Style Selector="ComboBox">
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderMidBrush}" />
      <Setter Property="BorderThickness" Value="{DynamicResource ThemeBorderThickness}" />
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="Padding" Value="4" />
      <Setter Property="MinHeight" Value="20" />
      <Setter Property="PlaceholderForeground" Value="{DynamicResource ThemeForegroundBrush}" />
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
      <Setter Property="Template">
        <ControlTemplate>
          <Border Name="border"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{TemplateBinding CornerRadius}">
            <Grid ColumnDefinitions="*,Auto">
              <TextBlock Name="PlaceholderTextBlock"
                         Grid.Column="0"
                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                         VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                         Margin="{TemplateBinding Padding}"
                         Text="{TemplateBinding PlaceholderText}"
                         Foreground="{TemplateBinding PlaceholderForeground}"
                         IsVisible="{TemplateBinding SelectionBoxItem, Converter={x:Static ObjectConverters.IsNull}}" />
              <ContentControl Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding ItemTemplate}"
                              Margin="{TemplateBinding Padding}"
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
              <ToggleButton Name="toggle"
                            BorderThickness="0"
                            Background="Transparent"
                            ClickMode="Press"
                            Focusable="False"
                            IsChecked="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
                            Grid.Column="1">
                <Path Fill="{DynamicResource ThemeForegroundBrush}"
                      Width="8"
                      Height="4"
                      Stretch="Uniform"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z" />
              </ToggleButton>
              <Popup Name="PART_Popup"
                     IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
                     MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                     MaxHeight="{TemplateBinding MaxDropDownHeight}"
                     PlacementTarget="{TemplateBinding}"
                     IsLightDismissEnabled="True">
                <Border Background="{DynamicResource ThemeBackgroundBrush}"
                        BorderBrush="{DynamicResource ThemeBorderMidBrush}"
                        BorderThickness="1">
                  <ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                    <ItemsPresenter Name="PART_ItemsPresenter"
                                    Items="{TemplateBinding Items}"
                                    ItemsPanel="{TemplateBinding ItemsPanel}"
                                    ItemTemplate="{TemplateBinding ItemTemplate}"
                                    VirtualizationMode="{TemplateBinding VirtualizationMode}" />
                  </ScrollViewer>
                </Border>
              </Popup>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>
    <Style Selector="ComboBoxItem:pointerover /template/ ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource HighlightBrush}" />
    </Style>
    <Style Selector="ComboBoxItem:selected /template/ ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource ComboBoxItemSelectedBackgroundBrush}"/>
    </Style>
    <Style Selector="ComboBox /template/ Path#DropDownGlyph">
      <Setter Property="Fill" Value="{DynamicResource HighlightForegroundBrush}"/>
    </Style>
    <Style Selector="CheckBox:checked /template/ Border#NormalRectangle">
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeBackgroundBrush}" />
      <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}" />
    </Style>
    <Style Selector="CheckBox:checked /template/ Path#CheckGlyph">
      <Setter Property="Fill" Value="{DynamicResource ThemeForegroundBrush}"/>
    </Style>
    <Style Selector="CheckBox#hideDisabledMods:unchecked /template/ Border#NormalRectangle">
      <Setter Property="BorderBrush" Value="{DynamicResource HighlightForegroundBrush}" />
    </Style>
    <Style Selector="CheckBox#hideDisabledMods:checked /template/ Border#NormalRectangle">
      <Setter Property="BorderBrush" Value="{DynamicResource HighlightForegroundBrush}" />
    </Style>
    <Style Selector="CheckBox#hideDisabledMods:pointerover /template/ ContentPresenter#ContentPresenter">
      <Setter Property="TextBlock.Foreground" Value="{DynamicResource HighlightForegroundBrush}" />
    </Style>
    <Style Selector="DataGridCell.centered">
      <Setter Property="TextBlock.HorizontalAlignment" Value="Center"/>
    </Style>
    <Style Selector="DataGridColumnHeader">
      <Setter Property="FontWeight" Value="Bold"/>
      <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
      <Setter Property="Background" Value="{DynamicResource DataGridHeaderBrush}"/>
    </Style>
    <Style Selector="DataGridColumnHeader[Content=Enabled]">
      <Setter Property="Margin" Value="-13 0 0 0"/>
      <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
      <Setter Property="Background" Value="{DynamicResource DataGridHeaderBrush}"/>
    </Style>
    <Style Selector="DataGridRow:selected /template/ Rectangle#BackgroundRectangle">
      <Setter Property="Fill" Value="{DynamicResource HighlightForegroundBrush}"/>
    </Style>
    <Style Selector="ListBoxItem">
      <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>
    <Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>
    <Style Selector="TextBox:focus">
      <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style Selector="TextBox:focus /template/ Border">
      <Setter Property="BorderBrush" Value="{DynamicResource ThemeForegroundBrush}"/>
      <Setter Property="Background" Value="{DynamicResource ThemeControlMidBrush}"/>
    </Style>
    <Style Selector="TextBox:not(:focus)">
      <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
      <Setter Property="Background" Value="{DynamicResource ThemeBackgroundBrush}"/>
    </Style>
  </Window.Styles>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="10" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="2*" />
      <ColumnDefinition Width="Auto" />
    </Grid.ColumnDefinitions>

    <Border Name="menuBorder" Grid.Row="0" BorderBrush="{DynamicResource HighlightBrush}" BorderThickness="0 0 0 2" Grid.ColumnSpan="2">
      <Menu Name="mainMenu" Width="190" HorizontalAlignment="Left" KeyboardNavigation.TabNavigation="None">
        <Image Source="/Assets/icon.ico" Stretch="None"/>
        <MenuItem Header="File" Margin="-10 0 0 0" Classes="Bar">
          <MenuItem Header="Add Mod" Click="AddMod_Click" Classes="Bar"/>
          <Separator/>
          <MenuItem Header="Start SMAPI" Click="Smapi_Click" Classes="Bar"/>
          <Separator/>
          <MenuItem Header="Exit" Click="Exit_Click" Classes="Bar"/>
        </MenuItem>
        <MenuItem Header="View" Margin="-10 0 0 0" Classes="Bar">
          <MenuItem Header="Settings" Click="Settings_Click" Classes="Bar"/>
          <MenuItem Header="Log File" Click="LogFile_Click" Classes="Bar"/>
        </MenuItem>
        <MenuItem Header="Tools" Margin="-10 0 0 0" Classes="Bar">
          <MenuItem Header="Check for Mod Updates" Click="ModUpdateCheck_Click" Classes="Bar"/>
          <Separator/>
          <MenuItem Header="Enable All Mods" Click="EnableAllMods_Click" Classes="Bar"/>
          <MenuItem Header="Disable All Mods" Click="DisableAllMods_Click" Classes="Bar"/>
          <Separator/>
          <MenuItem Header="Update Stardrop" Foreground="Gray" Classes="Bar"/>
        </MenuItem>
      </Menu>
    </Border>
    <TextBlock Text="☆ Stardrop ☆" IsHitTestVisible="False" Grid.Row="0" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="20" Foreground="{DynamicResource ThemeForegroundBrush}" />
    <Menu Name="windowMenu" HorizontalAlignment="Right" KeyboardNavigation.TabNavigation="None" Grid.Column="1">
      <Button Name="minimizeButton" i:Attached.Icon="mdi-window-minimize" Margin="0 0 -10 0" Foreground="{DynamicResource ThemeForegroundBrush}"  Background="Transparent"/>
      <Button Name="maximizeButton" i:Attached.Icon="mdi-window-maximize" Margin="0 0 -10 0" Foreground="{DynamicResource ThemeForegroundBrush}" Background="Transparent"/>
      <Button Name="exitButton" i:Attached.Icon="mdi-close" Margin="0 0 -10 0" Foreground="{DynamicResource ThemeForegroundBrush}" Background="Transparent"/>
    </Menu>
    <!-- ToolBar -->
    <Separator />

    <DockPanel Name="profileBar" Grid.Row="2" Grid.Column="0">
      <TextBlock Text="Profile" Foreground="{DynamicResource ThemeForegroundBrush}" Padding="7" Focusable="False" VerticalAlignment="Center" />
      <ComboBox x:Name="profileComboBox" Background="{DynamicResource ThemeBackgroundBrush}" Foreground="{DynamicResource ThemeForegroundBrush}" VerticalAlignment="Center"  FontWeight="Bold" BorderBrush="{DynamicResource HighlightBrush}" SelectedIndex="0" Width="300">
        <ComboBox.ItemTemplate>
          <DataTemplate>
            <StackPanel>
              <TextBlock Text="{Binding Path=Name}"/>
            </StackPanel>
          </DataTemplate>
        </ComboBox.ItemTemplate>
      </ComboBox>
      <Button Name="editProfilesButton" i:Attached.Icon="mdi-playlist-edit" VerticalAlignment="Center"  Margin="5 0 0 0" Foreground="{DynamicResource ThemeForegroundBrush}" Background="Transparent" BorderBrush="{DynamicResource HighlightBrush}"/>
      <TextBlock Text="{Binding Path=EnabledModCount, StringFormat=Enabled Mods: {0}}" Foreground="{DynamicResource ThemeForegroundBrush}" VerticalAlignment="Center" Margin="10 0 0 2"/>
    </DockPanel>
    <DockPanel Name="toolBar" Grid.Row="2"  Grid.Column="1">
      <Button Name="smapiButton" IsEnabled="{Binding !IsLocked}" Content="/Assets/icon.ico" Background="Transparent" HorizontalAlignment="Right" Width="60" Height="40" VerticalAlignment="Center"  Margin="0 0 10 0">
        <Panel>
          <Image Source="/Assets/smapi.png" Stretch="Uniform" />
        </Panel>
      </Button>
    </DockPanel>

    <Border Name="dragOverBorder" Margin="10" DragDrop.AllowDrop="True" Grid.Row="3" Grid.ColumnSpan="2" BorderBrush="{DynamicResource HighlightBrush}" BorderThickness="2">
      <DataGrid Name="modGrid" Foreground="{DynamicResource DataGridRowForeground}" Background="{DynamicResource DataGridRowBackground}" AlternatingRowBackground="{DynamicResource AlternativeDataGridRowBackground}" CanUserSortColumns="True" CanUserResizeColumns="True" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
        <DataGrid.Resources>
          <ContextMenu x:Key="GridColumnContextMenu" DataContext="{Binding $parent[DataGrid].DataContext}" ContextMenuOpening="ModGridMenuColumn_Opening">
            <!-- <MenuItem Header="{Binding SortText}" Click="ModGridMenuColumn_ChangeSort" />-->
            <!-- <MenuItem Header="Hide" Click="ModGridColumnMenu_ChangeVisibility" />-->
            <MenuItem Header="Cancel" />
          </ContextMenu>
          <ContextMenu x:Key="GridRowContextMenu" DataContext="{Binding $parent[DataGrid].DataContext}" ContextMenuOpening="ModGridMenuRow_Opening">
            <MenuItem Header="Open Containing Folder" Click="ModGridMenuRow_OpenFolderPath" />
            <MenuItem Header="{Binding ChangeStateText}" Click="ModGridMenuRow_ChangeState" />
            <MenuItem Header="Delete" Click="ModGridMenuRow_Delete" />
            <MenuItem Header="Cancel" />
          </ContextMenu>
        </DataGrid.Resources>
        <DataGrid.Styles>
          <Style Selector="DataGridColumnHeader">
            <Setter Property="ContextMenu" Value="{StaticResource GridColumnContextMenu}" />
          </Style>
          <Style Selector="DataGridRow">
            <Setter Property="ContextMenu" Value="{StaticResource GridRowContextMenu}" />
          </Style>
        </DataGrid.Styles>
        <DataGrid.Columns>
          <DataGridTemplateColumn Header="Enabled" Width="25" CanUserResize="False" CanUserSort="True" SortMemberPath="IsEnabled">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <CheckBox Content="{Binding UniqueId}" IsChecked="{Binding IsEnabled}" Click="EnabledBox_Clicked" Margin="5 0 0 0"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTextColumn Binding="{Binding Name}">
            <DataGridTextColumn.Header>
              <TextBlock Text="Mod Name" TextAlignment="Center" />
            </DataGridTextColumn.Header>
          </DataGridTextColumn>
          <DataGridTextColumn Binding="{Binding UniqueId}" IsVisible="False">
            <DataGridTextColumn.Header>
              <TextBlock Text="Unique ID" TextAlignment="Center" />
            </DataGridTextColumn.Header>
          </DataGridTextColumn>
          <DataGridTextColumn Binding="{Binding Author}" CellStyleClasses="centered">
            <DataGridTextColumn.Header>
              <TextBlock Text="Author" TextAlignment="Center"/>
            </DataGridTextColumn.Header>
          </DataGridTextColumn>
          <DataGridTemplateColumn SortMemberPath="MissingRequirements.Count" CellStyleClasses="centered">
            <DataGridTemplateColumn.Header>
              <TextBlock Text="Missing Requirements" TextAlignment="Center" />
            </DataGridTemplateColumn.Header>
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <ListBox Items="{Binding MissingRequirements}" Background="Transparent">
                  <ListBox.ItemTemplate>
                    <DataTemplate>
                      <Button Content="{Binding Path=Name}" Classes="hyperlink" Command="{Binding $parent[DataGrid].DataContext.OpenBrowser}" CommandParameter="{Binding GenericLink}" Foreground="{DynamicResource HighlightForegroundBrush}"/>
                    </DataTemplate>
                  </ListBox.ItemTemplate>
                </ListBox>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTextColumn Binding="{Binding ParsedVersion}" CellStyleClasses="centered">
            <DataGridTextColumn.Header>
              <TextBlock Text="Version" TextAlignment="Center" />
            </DataGridTextColumn.Header>
          </DataGridTextColumn>
          <DataGridTemplateColumn SortMemberPath="ParsedStatus" CellStyleClasses="centered">
            <DataGridTemplateColumn.Header>
              <TextBlock Text="Status" TextAlignment="Center" />
            </DataGridTemplateColumn.Header>
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Button Name="statusButton" Tag="{Binding Status, Converter={StaticResource EnumToStringConverter}}" Classes="hyperlink status" Content="{Binding ParsedStatus}" Command="{Binding $parent[DataGrid].DataContext.OpenBrowser}" CommandParameter="{Binding Uri}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        </DataGrid.Columns>
      </DataGrid>
    </Border>
    <DockPanel Name="filterBar" Grid.Row="4" Grid.Column="0" Margin="7 0 0 5">
      <TextBox Name="searchBox" Watermark="Filter" Height="10" Width="250" BorderBrush="{DynamicResource HighlightBrush}" HorizontalAlignment="Left"/>
      <ComboBox x:Name="filterColumnBox" Margin="5 2 0 0" Background="{DynamicResource ThemeBackgroundBrush}" Foreground="{DynamicResource ThemeForegroundBrush}" FontWeight="Bold" BorderBrush="{DynamicResource HighlightBrush}" SelectedIndex="0" Width="150">
        <ComboBoxItem Content="Mod Name" />
        <ComboBoxItem Content="Author" />
        <ComboBoxItem Content="Requirements" />
      </ComboBox>
      <CheckBox Name="hideDisabledMods" Content="Hide Disabled Mods" Foreground="{DynamicResource ThemeForegroundBrush}" Margin="7 0 0 0"/>
    </DockPanel>
    <Border Grid.Row="5" Grid.ColumnSpan="2" BorderBrush="{DynamicResource HighlightBrush}" BorderThickness="0 2 0 0">
      <Button Content="{Binding Version}" Classes="hyperlink" Command="{Binding OpenBrowser}" CommandParameter="https://github.com/Floogen/Stardrop" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 10 0"/>
    </Border>
    <Menu Grid.Row="5" Grid.Column="0" Name="statusBar" HorizontalAlignment="Left" KeyboardNavigation.TabNavigation="None">
      <MenuItem Header="{Binding UpdateStatusText}" Click="ModUpdateCheck_Click" Classes="Bar"/>
    </Menu>
  </Grid>
</Window>
